+-----------------------------------+-----------------------------------------------------------------+
| Function                          | Synopsis                                                        |
+===================================+=================================================================+
| *circos*                          |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`genCircosConf`       | Generate a Circos configuration.                                |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`rgb2colordef`        | Create color definitions file for use with Circos.              |
+-----------------------------------+-----------------------------------------------------------------+
| *data*                            |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`clipData`            | Clip/winsorize data according to the specified clipping limits. |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`cutData`             | Cut data according to the specified limits.                     |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`flat`                | Flatten an array of data.                                       |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`rescaleData`         | Rescale (linearly transform) data to the specified range.       |
+-----------------------------------+-----------------------------------------------------------------+
| *file*                            |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`fileCountLines`      | Count the number of lines in a file.                            |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`fileExists`          | Check if a given file exists.                                   |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`fileGetDir`          | Get directory from full path.                                   |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`fileGetExt`          | Get extension from full path.                                   |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`fileGetName`         | Get filename from full path.                                    |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`fileGlob`            | Filename expansion.                                             |
+-----------------------------------+-----------------------------------------------------------------+
| *mri*                             |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`readImgData`         | Read neuroimaging data.                                         |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`readImgHdr`          | Read header information for neuroimaging data.                  |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`writeImgData`        | Write neuroimaging data to a NIFTI file.                        |
+-----------------------------------+-----------------------------------------------------------------+
| *perf*                            |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`getPageSize`         | Get page size using getconf.                                    |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`monMem`              | Monitor memory usage using the proc filesystem.                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`monPerf`             | Monitor performance based on event counters using perf stat.    |
+-----------------------------------+-----------------------------------------------------------------+
| *plot*                            |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`blend`               | Composite image A over image B.                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`pngcolorbar`         | Save a colorbar in png format.                                  |
+-----------------------------------+-----------------------------------------------------------------+
| *pool*                            |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`poolmgr`             | Unified parallel pool management across Matlab versions.        |
+-----------------------------------+-----------------------------------------------------------------+
| *ui*                              |                                                                 |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`drawOutline`         | Draw 2D outline.                                                |
+-----------------------------------+-----------------------------------------------------------------+
| |_| :util-m:`getAxesBelowPointer` | Get axes below the mouse pointer.                               |
+-----------------------------------+-----------------------------------------------------------------+
